networks:
  drf_network:
    driver: bridge

services:
  redis:
    image: redis
    networks:
      - drf_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1m30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', '-c', 'pg_isready -d $POSTGRES_PASSWORD -U -$POSTGRES_USER']
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    networks:
      - drf_network
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
volumes:
  pg_data: